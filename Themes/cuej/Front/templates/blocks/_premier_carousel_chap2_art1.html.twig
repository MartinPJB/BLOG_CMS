{#
Custom block : Caroussel1
#}
<style>
  .carousel {
    position: relative;
    user-select: none;
    height: 39vw;
  }

  .carousel__item {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50vw;
    height: auto;
    border-radius: 15px;
    overflow: hidden;
    transition: all 300ms ease-in-out;
    z-index: -1;
    opacity: 0;
  }
  .carousel__item>img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .carousel__item.active {
    opacity: 1;
    z-index: 99;
    box-shadow: 0px 0px 105px -35px rgba(0, 0, 0, 0.75);
  }
  .carousel__item.prev {
    z-index: 2;
    opacity: 0;
    transform: translate(-125%, -50%);
  }
  .carousel__item.next {
    z-index: 2;
    opacity: 0;
    transform: translate(25%, -50%);
  }
  .carousel__legend {
    padding: .5em;
    line-height: 120%;
  }

  .carousel__button-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 49.5vw;
    z-index: 100;
  }
  .carousel__button {
    color: #fff;
    font-size: 32px;
    cursor: pointer;
    position: relative;
    opacity: 0.75;
    transition: all 300ms ease-in-out;
  }
  .carousel__button:hover {
    opacity: 1;
  }
  .carousel__button:before {
    content: "";
    background: url(public/front/img/svg/icon-back_top.svg) center / cover;
    position: absolute;
    filter: var(--fill-filter--primary);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 50px;
    height: 50px;
    border-radius: 50%;
    z-index: -99;
  }
  .carousel__button-container>.carousel__button:nth-child(1) {
    float: left;
    transform: rotate(-90deg);
  }
  .carousel__button-container>.carousel__button:nth-child(2) {
    float: right;
    transform: rotate(90deg);
  }

  .carousel__indicators {
  	position: absolute;
  	bottom: -1em;
  	left: 50%;
  	display: flex;
  	gap: .5em;
  	transform: translateX(-50%);
  }
  .carousel__indicator {
  	border-radius: 100%;
      display: block;
      width: 1em;
      height: 1em;
      border: var(--color-primary) .1em solid;
  	background-color: #fff;
  	transition: background-color .3s;
  }
  .carousel__indicator.active {
  	background-color: var(--color-primary);
  }

  @media screen and (max-width: 1024px) {
    .carousel {
      height: 80vw;
    }
    .carousel__item {
      width: 75vw;
    }
    .carousel__button-container {
      width: 74.5vw;
    }
  }
</style>
<div class="carousel" id="carousel1">
  <figure class="carousel__item active">
    <img src="public/front/img/caroussel1/Mariam horizontale.JPG" alt="">
    <figcaption class="carousel__legend">
      Chaque jour, Mariam regrette d&rsquo;avoir laissé ses
      deux enfants en Côte d&rsquo;Ivoire. Si elle obtient le statut de réfugiée,
      elle espère pouvoir solliciter un regroupement familial.
      © Julie Lescarmontier
    </figcaption>
  </figure>
  <figure class=" carousel__item next">
    <img src="public/front/img/caroussel1/Cuisine Mariam.JPG" alt="">
    <figcaption class="carousel__legend">
      A la recherche des ingrédients pour cuisiner ses spécialités,
      Mariam prend plaisir à parcourir les supermarchés de Clermont-Ferrand.
      © Julie Lescarmontier
    </figcaption>
  </figure>
  <figure class="carousel__item">
    <img src="public/front/img/caroussel1/Neriné.JPG" alt="">
    <figcaption class="carousel__legend">
      Adriné est arménienne, son mari syrien. Il y a un an, ils ont tous deux
      quitté la Syrie pour fuir la guerre. © Julie Lescarmontier
    </figcaption>
  </figure>
  <figure class="carousel__item">
    <img src="public/front/img/caroussel1/Coin religion Nariné.JPG" alt="">
    <figcaption class="carousel__legend">
      La religion, c&rsquo;est l'une des rares sources de réconfort
      d&rsquo;Adriné en France. Dans son petit 20m², elle a aménagé un coin
      prière. Elle se rend à la messe tous les dimanches. © Julie Lescarmontier
    </figcaption>
  </figure>
  <div class="carousel__button-container">
    <div class="carousel__button"></div>
    <div class="carousel__button"></div>
  </div>
</div>

<script>
  class Carousel {
    constructor(carouselId) {
      this.carousel = document.getElementById(carouselId);
      this.items = this.carousel.querySelectorAll('.carousel__item');
      this.buttons = this.carousel.querySelectorAll('.carousel__button');
      this.indicatorContainer = document.createElement('div');
      this.indicators = [];

      this.current = 0;
      this.prev = this.items.length - 1;
      this.next = 1;

      this.setupIndicators();
      this.updateIndicators();
      this.updateButtons();
      this.setupListeners();
    }

    setupListeners() {
      for (let i = 0; i < this.buttons.length; i++) {
        this.buttons[i].addEventListener('click', () => (i === 0 ? this.gotoPrev() : this.gotoNext()));
      }
    }

    setupIndicators() {
      this.indicatorContainer.className = 'carousel__indicators';
      this.carousel.appendChild(this.indicatorContainer);

      for (let i = 0; i < this.items.length; i++) {
        let indicator = document.createElement('div');
        indicator.className = 'carousel__indicator';
        this.indicatorContainer.appendChild(indicator);
        this.indicators.push(indicator);
      }
    }

    updateIndicators() {
      this.indicators.forEach((indicator, index) => {
        if (index === this.current) {
          indicator.classList.add('active');
        } else {
          indicator.classList.remove('active');
        }
      });
    }

    gotoPrev() {
      this.current > 0 ? this.gotoNum(this.current - 1) : this.gotoNum(this.items.length - 1);
    }
    gotoNext() {
      this.current < this.items.length - 1 ? this.gotoNum(this.current + 1) : this.gotoNum(0);
    }
    gotoNum(number) {
      this.current = number;
      this.prev = this.current - 1;
      this.next = this.current + 1;

      if (this.next === this.items.length) {
        this.next = 0;
      }
      if (this.prev === -1) {
        this.prev = this.items.length - 1;
      }

      this.items.forEach(item => {
        item.classList.remove('active', 'prev', 'next');
      });

      this.items[this.current].classList.add('active');
      this.items[this.prev].classList.add('prev');
      this.items[this.next].classList.add('next');

      this.updateIndicators();
      this.updateButtons();
    }

    updateButtons() {
      if (this.current === 0) {
        this.buttons[0].style.visibility = 'hidden';
      } else {
        this.buttons[0].style.visibility = 'visible';
      }

      if (this.current === this.items.length - 1) {
        this.buttons[1].style.visibility = 'hidden';
      } else {
        this.buttons[1].style.visibility = 'visible';
      }
    }
  }

  document.addEventListener("DOMContentLoaded", function() {
    for (let carousel of document.querySelectorAll('[id^="carousel"]')) {
      new Carousel(carousel.id);
    }
  });
</script>
